# Generated by Django 5.1.4 on 2025-04-29 01:48

import django.db.models.deletion
from django.db import migrations, models


def create_types_and_default_company(apps, schema_editor):
    Type = apps.get_model('inventory2', 'Type')
    Company = apps.get_model('inventory2', 'Company')

    # 타입 생성
    t1 = Type.objects.create(name="재고")
    t2 = Type.objects.create(name="출고")
    t3 = Type.objects.create(name="검수")
    t4 = Type.objects.create(name="입고")
    t5 = Type.objects.create(name="총재고")
    # 회사 생성
    c = Company.objects.create(company_name="파이헬스케어", company_code="00001")

    # 타입 권한 부여
    c.available_type.set([t1, t2, t3, t4, t5])


def create_superuser(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    User.objects.create_superuser(username='admin', email='12@12.12', password='12')


def reverse_func(apps, schema_editor):
    Type = apps.get_model('inventory2', 'Type')
    Company = apps.get_model('inventory2', 'Company')
    Company.objects.filter(company_code="00001").delete()
    Type.objects.filter(name__in=["재고", "출고", "검수", "입고", "총재고"]).delete()


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, unique=True)),
                ('company_code', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': '고객사',
                'verbose_name_plural': '고객사 목록',
            },
        ),
        migrations.CreateModel(
            name='DefaultInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_name', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_size', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_location', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('pie_healthcare_num', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('medication_lot_number', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': '기본 데이터셋',
                'verbose_name_plural': '기본 데이터셋 목록',
                'ordering': ['expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': '실행타입',
                'verbose_name_plural': '실행타입 목록',
            },
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory2.company')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory2.type')),
            ],
            options={
                'verbose_name': '타입별 생성시각',
                'verbose_name_plural': '타입별 생성시각 목록',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EPCdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.CharField(max_length=10000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to='inventory2.date')),
            ],
            options={
                'verbose_name': '원본스캔데이터',
                'verbose_name_plural': '원본스캔데이터 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Inventory2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pie_healthcare_num', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('medication_lot_number', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_name', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_size', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_location', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory2.date')),
            ],
            options={
                'verbose_name': '현재고',
                'verbose_name_plural': '현재고 목록',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InventoryDiscrepancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pie_healthcare_num', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('medication_lot_number', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_name', models.CharField(blank=True, max_length=100, null=True)),
                ('discrepancy_quantity', models.IntegerField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory2.date')),
            ],
            options={
                'verbose_name': '오차재고',
                'verbose_name_plural': '오차재고 목록',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ManufacturingHash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_code', models.CharField(max_length=20, unique=True)),
                ('hashed_code', models.CharField(max_length=9, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['hashed_code'], name='inventory2__hashed__0a61b4_idx')],
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pie_healthcare_num', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('medication_lot_number', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_name', models.CharField(blank=True, max_length=100, null=True)),
                ('medication_size', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_location', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory2.date')),
            ],
            options={
                'verbose_name': '비교재고',
                'verbose_name_plural': '비교재고 목록',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='available_type',
            field=models.ManyToManyField(related_name='available_type', to='inventory2.type'),
        ),
        migrations.CreateModel(
            name='RFIDScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pie_healthcare_num', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('medication_lot_number', models.CharField(blank=True, max_length=100, null=True)),
                ('scanned_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory2.date')),
            ],
            options={
                'verbose_name': '스캔데이터',
                'verbose_name_plural': '스캔데이터 목록',
                'ordering': ['-expiry_date'],
                'unique_together': {('pie_healthcare_num', 'expiry_date')},
            },
        ),
        migrations.RunPython(create_types_and_default_company, reverse_func, create_superuser),
    ]
